[package]
name = "spotflow-rumqttc-fork"
version = "0.12.0"
description = "A temporary fork of rumqtt that allows getting packet ID from sent messages"
license = "Apache-2.0"
repository = "https://github.com/spotflow-io/rumqtt"
authors = ["tekjar"]
edition = "2018"
keywords = ["mqtt", "iot", "coap", "http"]
categories = ["network-programming"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[features]
default = ["use-rustls"]
use-rustls = ["tokio-rustls", "rustls-pemfile"]
use-native-tls = ["tokio-native-tls", "native-tls"]
websocket = ["async-tungstenite", "ws_stream_tungstenite", "http"]

[dependencies]
tokio = { version = "1.0", features = ["rt", "macros", "io-util", "net", "time"] }
bytes = "1.0"
pollster = "0.2"
async-channel = "1.5"
log = "0.4"
thiserror = "1.0.21"

# Optional
# rustls
tokio-rustls = { version = "0.23.2", optional = true }
rustls-pemfile = { version = "0.3.0", optional = true }
# websockets
async-tungstenite = { version = "0.16.1", default-features = false, features = ["tokio-rustls-native-certs"], optional = true }
ws_stream_tungstenite = { version = "0.7.0", default-features = false, features = ["tokio_io"], optional = true }
http = { version = "0.2", optional = true }
# native-tls
tokio-native-tls = { version = "0.3.0", optional = true }
native-tls = { version = "0.2.8", optional = true }
# url
url = { version = "2.2", default-features = false, optional = true }

[dev-dependencies]
pretty_env_logger = "0.4"
color-backtrace = "0.4"
crossbeam-channel = "0.5"
serde = {version = "1", features = ["derive"]}
envy = "0.4"
jsonwebtoken = "7"
tokio = { version = "1.0", features = ["full", "macros"] }
matches = "0.1.8"
rustls = "0.20.2"
rustls-native-certs = "0.6.1"
pretty_assertions = "0.6.1"
